#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        morf_esc_grave_en: morf_esc_grave_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_ESC_GRAVE_EN";
            bindings = <&kp ESC>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
            keep-mods = <(MOD_LCTL)>;
        };

        morf_i_iot_ru: morf_i_iot_ru {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_I_IOT_RU";
            bindings = <&kp RU_CYRILLIC_I>, <&kp RU_CYRILLIC_SHORT_I>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        morf_ie_io_ru: morf_ie_io_ru {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_IE_IO_RU";
            bindings = <&kp RU_CYRILLIC_IE>, <&kp RU_CYRILLIC_IO>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        morf_soft_hard_sign_ru: morf_soft_hard_sign_ru {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_SOFT_HARD_SIGN_RU";
            bindings = <&kp RU_CYRILLIC_SOFT_SIGN>, <&kp RU_CYRILLIC_HARD_SIGN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        morf_slash_en: morf_slash_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_SLASH_EN";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morf_dot_en: morf_dot_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_DOT_EN";
            bindings = <&kp DOT>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morf_comma_en: morf_comma_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_COMMA_EN";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morf_left_parent_en: morf_left_parent_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_LEFT_PARENT_EN";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morf_right_parent_en: morf_right_parent_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_RIGHT_PARENT_EN";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morf_greather_than_en: morf_greather_than_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_GREATHER_THAN_EN";
            bindings = <&kp GREATER_THAN>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        morf_less_than_en: morf_less_than_en {
            compatible = "zmk,behavior-mod-morph";
            label = "MORF_LESS_THAN_EN";
            bindings = <&kp LESS_THAN>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        h_t_my: h_t_my {
            compatible = "zmk,behavior-hold-tap";
            label = "H_T_MY";
            bindings = <&kp>, <&morf_i_iot_ru>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <16 15>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <15 16>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(N2)>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(N1)>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&morf_esc_grave_en  &kp F2  &kp F3       &kp F4       &kp F5      &kp F6                                                 &kp F7     &kp F8      &kp F9        &kp F10         &kp F11         &kp F12
&trans              &kp B   &kp L        &kp D        &kp W       &kp Z                                                  &kp COMMA  &kp F       &kp O         &kp U           &kp J           &kp BACKSPACE
&kp TAB             &kp N   &mt LSHFT R  &mt LCTRL T  &mt LALT S  &kp G                                                  &kp Y      &mt LALT H  &mt LCTRL A   &mt LSHFT E     &kp I           &kp DELETE
&morf_less_than_en  &kp Q   &kp X        &kp M        &kp C       &kp V   &morf_left_parent_en    &morf_right_parent_en  &kp K      &kp P       &morf_dot_en  &morf_comma_en  &morf_slash_en  &morf_greather_than_en
                            &kp LGUI     &trans       &mo 3       &mo 2   &kp SPACE               &kp ENTER              &mo 4      &mo 6       &trans        &trans
            >;

            display-name = "En";
        };

        ru {
            display-name = "Ru";
            bindings = <
&morf_esc_grave_en  &kp F2              &kp F3                    &kp F4                       &kp F5                    &kp F6                                         &kp F7               &kp F8                    &kp F9                      &kp F10               &kp F11             &kp F12
&trans              &kp RU_CYRILLIC_BE  &kp RU_CYRILLIC_ZE        &kp RU_CYRILLIC_SHA          &kp RU_CYRILLIC_DE        &kp RU_CYRILLIC_HA                             &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_CHE       &kp RU_CYRILLIC_A           &kp RU_CYRILLIC_U     &kp RU_CYRILLIC_YU  &kp BACKSPACE
&kp TAB             &kp RU_CYRILLIC_VE  &mt LSHFT RU_CYRILLIC_ES  &mt LEFT_ALT RU_CYRILLIC_EN  &mt LCTRL RU_CYRILLIC_TE  &kp RU_CYRILLIC_EF                             &kp RU_CYRILLIC_E    &mt LCTRL RU_CYRILLIC_ER  &mt LEFT_ALT RU_CYRILLIC_O  &h_t_my LSHFT 0       &morf_ie_io_ru      &kp DELETE
&trans              &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_GHE       &kp RU_CYRILLIC_PE           &kp RU_CYRILLIC_EM        &kp RU_CYRILLIC_SHCHA  &trans       &trans     &kp RU_CYRILLIC_TSE  &kp RU_CYRILLIC_EL        &morf_soft_hard_sign_ru     &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_YA  &trans
                                        &kp LGUI                  &trans                       &mo 3                     &mo 2                  &kp SPACE    &kp ENTER  &mo 5                &mo 6                     &trans                      &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans     &trans    &trans     &trans                          &trans  &trans          &trans          &trans     &trans  &trans
&trans  &trans  &trans     &trans    &trans     &trans                          &trans  &kp HOME        &kp UP_ARROW    &kp END    &trans  &trans
&trans  &trans  &kp LSHFT  &kp LALT  &kp LCTRL  &trans                          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans     &trans    &trans     &trans  &trans       &trans     &trans  &kp PAGE_UP     &kp PAGE_DOWN   &trans     &trans  &trans
                &trans     &trans    &trans     &trans  &kp SPACE    &kp ENTER  &mo 7   &trans          &trans          &trans
            >;

            display-name = "Navigation";
        };

        num {
            display-name = "Num";
            bindings = <
&trans  &trans  &trans        &trans    &trans         &trans                        &trans  &trans  &trans  &trans   &trans      &kp BACKSPACE
&trans  &trans  &kp HOME      &kp UP    &kp END        &kp INS                       &trans  &kp N7  &kp N8  &kp N9   &kp PLUS    &kp MINUS
&trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &kp RET                       &trans  &kp N4  &kp N5  &kp N6   &kp ASTRK   &kp KP_SLASH
&trans  &trans  &kp LC(LEFT)  &kp CAPS  &kp LC(RIGHT)  &kp DEL  &trans    &trans     &trans  &kp N1  &kp N2  &kp N3   &kp KP_DOT  &trans
                &trans        &trans    &trans         &trans   &trans    &kp ENTER  &mo 7   &trans  &kp N0  &kp DOT
            >;
        };

        sym_en {
            bindings = <
&trans  &trans    &kp AT    &kp DLLR   &kp HASH  &trans                       &trans     &trans    &kp CARET       &trans          &trans    &trans
&trans  &trans    &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                    &kp TILDE  &kp LBKT  &kp RBKT        &kp RBKT        &kp AMPS  &trans
&trans  &kp BSLH  &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                     &kp PRCNT  &kp LBRC  &kp RBRC        &kp UNDERSCORE  &kp EXCL  &kp QUESTION
&trans  &trans    &kp STAR  &trans     &kp FSLH  &trans     &trans    &trans  &trans     &kp PIPE  &morf_comma_en  &morf_dot_en    &trans    &trans
                  &trans    &trans     &trans    &mo 7      &trans    &trans  &trans     &trans    &trans          &trans
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans  &trans        &en AT        &en DLLR      &en HASH     &trans                           &trans          &trans    &en CARET    &trans    &trans      &trans
&trans  &trans        &en LT        &kp EQUAL     &en GT       &en GRAVE                        &trans          &en LBKT  &kp UNDER    &en RBKT  &trans      &trans
&trans  &kp RU_BSLH   &kp LPAR      &kp MINUS     &kp RPAR     &kp PLUS                         &kp RU_PERCENT  &en LBRC  &kp RU_SEMI  &en RBRC  &kp EXCL    &kp RU_QUESTION
&trans  &kp RU_COMMA  &kp RU_ASTRK  &kp RU_COLON  &kp RU_FSLH  &kp RU_NUMERO  &trans    &trans  &trans          &en PIPE  &en TILDE    &en AMPS  &kp RU_DOT  &trans
                      &trans        &trans        &trans       &mo 7          &trans    &trans  &trans          &trans    &trans       &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans  &trans     &trans    &trans     &trans                          &trans  &trans   &trans   &trans   &trans  &trans
&trans  &trans  &trans     &trans    &trans     &trans                          &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans  &trans  &kp LSHFT  &kp LALT  &kp LCTRL  &trans                          &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans
&trans  &trans  &trans     &trans    &trans     &trans  &trans       &trans     &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans
                &trans     &trans    &trans     &trans  &kp SPACE    &kp ENTER  &trans  &trans   &trans   &trans
            >;

            label = "Fun";
        };

        adj {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans       &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &trans        &studio_unlock
&trans       &trans  &trans  &trans  &trans  &trans                    &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                     &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
            >;

            display-name = "Adjust";
        };
    };
};
